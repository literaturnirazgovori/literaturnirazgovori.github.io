# Workflow for retrieving and caching GAnalytics data for all pages on the site
name: Retrieve Google Analytics GA4 data

on:
  schedule:
    # * is a special character in YAML so you have to quote this string
  - cron: '0 */4 * * *'     # every 4 hours at xx:00
#   - cron:  '0 * * * *'      # every 1 hour at xx:00
#   - cron:  '*/30 * * * *'   # every 30 mins
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions: write-all

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Fetch all analytics data, and update relevant posts
        env:
          Analytics_PrivateKey_BASE64: ${{ secrets.ANALYTICS_GA4_KEYFILE }}      
        run: |
          echo "******* Update and upgrade *******"
          sudo apt update
          echo "******* Installing packs *******"
          sudo apt install -y git nano curl wget jq

          export decoded=$(echo "$Analytics_PrivateKey_BASE64" | base64 -d)
          export Analytics_PrivateKey_JSON=$(jq --compact-output --raw-output <<< $decoded)
          # echo "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-"
          # echo $Analytics_PrivateKey_BASE64
          # echo "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-"
          # echo $Analytics_PrivateKey_JSON
          # echo "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-"

          git config core.quotepath false
          git config --global user.email "alrotem@gmail.com"
          git config --global user.name "Alon Rotem"

          pip install --upgrade pip
          pip install google-api-python-client oauth2client google-analytics-data python-frontmatter

          # which python # /opt/hostedtoolcache/Python/3.9.17/x64/bin/python
          python ./utils/analytics-fetch.py

          numChangedFiles=$(git status -s | wc -l)
          echo "$numChangedFiles files pending push!"
          
          if [[ $numChangedFiles > 0 ]]
          then
            echo "Pushing $numChangedFiles changed files..."
            git remote set-url --push origin "https://alonrotem:${{ secrets.GITHUB_TOKEN }}@github.com/literaturnirazgovori/literaturnirazgovori.github.io"
            git add .
            git commit -m"Updating pageviews!"
            git push
          else
            echo "No files changed, no pending push."
          fi

#      - name: Setup Pages
#        uses: actions/configure-pages@v2
#        
#      - name: Build with Jekyll
#        uses: actions/jekyll-build-pages@v1
#        with:
#          source: ./
#          destination: ./_site
#      - name: Upload artifact
#        uses: actions/upload-pages-artifact@v1
      - name: Setup Ruby
        uses: ruby/setup-ruby@8575951200e472d5f2d95c625da0c7bec8217c42 # v1.161.0
        with:
          ruby-version: '2.7.0' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v2

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
